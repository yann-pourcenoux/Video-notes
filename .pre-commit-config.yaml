# Pre-commit hooks configuration for Video Notes
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # General code quality hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Basic file checks
      - id: trailing-whitespace
        description: "Remove trailing whitespace"
      - id: end-of-file-fixer
        description: "Ensure files end with a newline"
      - id: check-yaml
        description: "Check YAML files for syntax errors"
      - id: check-toml
        description: "Check TOML files for syntax errors"
      - id: check-json
        description: "Check JSON files for syntax errors"
      - id: check-xml
        description: "Check XML files for syntax errors"

      # Python-specific checks
      - id: check-ast
        description: "Check Python AST for syntax errors"
      - id: check-builtin-literals
        description: "Check for Python builtin type constructor use"
      - id: check-case-conflict
        description: "Check for files that would conflict on case-insensitive filesystems"
      - id: check-docstring-first
        description: "Check that docstrings come first"
      - id: check-merge-conflict
        description: "Check for merge conflict markers"
      - id: debug-statements
        description: "Check for debugger imports and breakpoints"
      - id: name-tests-test
        description: "Ensure test files are named correctly"
        args: ["--pytest-test-first"]

      # Security and privacy
      - id: detect-private-key
        description: "Detect private keys"
      - id: check-added-large-files
        description: "Prevent large files from being committed"
        args: ["--maxkb=1000"]

      # Mixed line ending
      - id: mixed-line-ending
        description: "Ensure consistent line endings"
        args: ["--fix=lf"]



  # Python linting and code formatting
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.5
    hooks:
      - id: ruff
        description: "Lint Python code with Ruff"
        args: ["--fix", "--exit-non-zero-on-fix"]
      - id: ruff-format
        description: "Format Python code with Ruff"

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        description: "Static type checking with MyPy"
        additional_dependencies: [
          "types-requests",
          "types-PyYAML",
          "pydantic>=2.9.2",
        ]
        args: [
          "--strict",
          "--ignore-missing-imports",
          "--install-types",
          "--non-interactive"
        ]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        description: "Security linting with Bandit"
        args: ["-r", "src/"]
        exclude: "tests/"





  # Additional Python code quality
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        description: "Upgrade Python syntax for newer versions"
        args: ["--py311-plus"]

  # Check for TODO/FIXME comments in production code
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        description: "Check commit message format"
        stages: [commit-msg]

# Configuration for specific tools
default_language_version:
  python: python3.11

# Exclude certain files/directories
exclude: |
  (?x)^(
      \.git/|
      \.venv/|
      __pycache__/|
      \.pytest_cache/|
      \.mypy_cache/|
      \.ruff_cache/|
      build/|
      dist/|
      .*\.egg-info/
  )$

# Additional configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
